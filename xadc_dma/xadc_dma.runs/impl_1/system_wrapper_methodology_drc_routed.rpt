Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
-----------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2017.2 (win64) Build 1909853 Thu Jun 15 18:39:09 MDT 2017
| Date         : Tue Jul 11 12:07:30 2017
| Host         : win-PC running 64-bit Service Pack 1  (build 7601)
| Command      : report_methodology -file system_wrapper_methodology_drc_routed.rpt -rpx system_wrapper_methodology_drc_routed.rpx
| Design       : system_wrapper
| Device       : xc7z010clg400-1
| Speed File   : -1
| Design State : Routed
-----------------------------------------------------------------------------------------------------------------------------------

Report Methodology

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
             Max violations: <unlimited>
             Violations found: 44
+-----------+----------+-------------------------------------------------+------------+
| Rule      | Severity | Description                                     | Violations |
+-----------+----------+-------------------------------------------------+------------+
| PDRC-190  | Warning  | Suboptimally placed synchronized register chain | 15         |
| TIMING-18 | Warning  | Missing input or output delay                   | 4          |
| XDCB-1    | Warning  | Runtime intensive exceptions                    | 1          |
| XDCB-5    | Warning  | Runtime inefficient way to find pin objects     | 24         |
+-----------+----------+-------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
PDRC-190#1 Warning
Suboptimally placed synchronized register chain  
The FDPE cell system_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.rst_wr_reg2_reg in site SLICE_X18Y49 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell system_i/axis_data_fifo_0/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.garst_sync[1].arst_sync_inst/Q_reg_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#2 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[0] in site SLICE_X36Y91 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#3 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[1] in site SLICE_X35Y90 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[1] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#4 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[2] in site SLICE_X35Y92 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[2] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#5 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[3] in site SLICE_X34Y93 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[3] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#6 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_reg[0] in site SLICE_X37Y93 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_1_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#7 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_reg[1] in site SLICE_X38Y93 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_1_reg[1] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#8 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_reg[2] in site SLICE_X36Y93 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_1_reg[2] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#9 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[12] in site SLICE_X40Y89 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[11] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#10 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[20] in site SLICE_X40Y88 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[19] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#11 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[4] in site SLICE_X40Y90 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[3] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#12 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[10] in site SLICE_X33Y87 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[9] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#13 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[2] in site SLICE_X33Y88 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[1] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#14 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/shift_reg_in_reg[0] in site SLICE_X40Y94 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_STAT/stat_reg_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#15 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_STAT/stat_reg_reg[0] in site SLICE_X40Y95 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_STAT/stat_reg_1_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

TIMING-18#1 Warning
Missing input or output delay  
An output delay is missing on leds_4bits_tri_o[0] relative to clock(s) clk_fpga_0 
Related violations: <none>

TIMING-18#2 Warning
Missing input or output delay  
An output delay is missing on leds_4bits_tri_o[1] relative to clock(s) clk_fpga_0 
Related violations: <none>

TIMING-18#3 Warning
Missing input or output delay  
An output delay is missing on leds_4bits_tri_o[2] relative to clock(s) clk_fpga_0 
Related violations: <none>

TIMING-18#4 Warning
Missing input or output delay  
An output delay is missing on leds_4bits_tri_o[3] relative to clock(s) clk_fpga_0 
Related violations: <none>

XDCB-1#1 Warning
Runtime intensive exceptions  
The following constraint contains more than 1000 objects. To preserve runtime and memory performance, it is recommended to include minimum number of objects. Check whether this list can be simplified.
-from = expands to 1136 design objects. 
set_false_path -from [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*...
e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 41)
Related violations: <none>

XDCB-5#1 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '52' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 80)
Related violations: <none>

XDCB-5#2 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '53' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 81)
Related violations: <none>

XDCB-5#3 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '54' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 82)
Related violations: <none>

XDCB-5#4 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '39' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 63)
Related violations: <none>

XDCB-5#5 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '46' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 74)
Related violations: <none>

XDCB-5#6 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '47' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 75)
Related violations: <none>

XDCB-5#7 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '48' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 76)
Related violations: <none>

XDCB-5#8 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '49' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 77)
Related violations: <none>

XDCB-5#9 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCMPCE/I_YESLUT6.U_SRL32/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '36' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 60)
Related violations: <none>

XDCB-5#10 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCRST/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '50' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 78)
Related violations: <none>

XDCB-5#11 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '38' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 62)
Related violations: <none>

XDCB-5#12 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '37' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 61)
Related violations: <none>

XDCB-5#13 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WCE/I_YESLUT6.U_SRLC16E/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '51' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 79)
Related violations: <none>

XDCB-5#14 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WHCMPCE/I_YESLUT6.U_SRL32/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '44' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 72)
Related violations: <none>

XDCB-5#15 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WLCMPCE/I_YESLUT6.U_SRL32/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '45' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 73)
Related violations: <none>

XDCB-5#16 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '41' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 69)
Related violations: <none>

XDCB-5#17 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '43' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 71)
Related violations: <none>

XDCB-5#18 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '40' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 68)
Related violations: <none>

XDCB-5#19 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '42' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 70)
Related violations: <none>

XDCB-5#20 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '30' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 41)
Related violations: <none>

XDCB-5#21 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '29' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 40)
Related violations: <none>

XDCB-5#22 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg/D}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '29' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 40)
Related violations: <none>

XDCB-5#23 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg/D}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '30' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_system_ila_0_2/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc (Line: 41)
Related violations: <none>

XDCB-5#24 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter {NAME =~ *gsckt_wrst.garst_sync[1].arst_sync_inst/Q_reg_reg[0]/D}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '56' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: e:/vivado_hardware_design/xadc_dma/xadc_dma.srcs/sources_1/bd/system/ip/system_axis_data_fifo_0_0/system_axis_data_fifo_0_0/system_axis_data_fifo_0_0.xdc (Line: 61)
Related violations: <none>


